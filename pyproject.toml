[tool.poetry]
name = "irrigation-pi"
version = "1.3.0"
description = ""
authors = ["Max Pfeiffer <max@maxpfeiffer.ch>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
alembic = "1.16.1"
APScheduler = "3.10.4"
asyncer = "0.0.8"
click = "8.2.1"
fastapi-slim = "0.115.12"
furl = "2.1.4"
psutil = "6.1.0"
pydantic-settings = "2.9.1"
semver = "3.0.4"
sqlalchemy = "2.0.41"
sqlmodel = "0.0.24"
toml = "0.10.2"
uvicorn = {version = "0.34.3", extras = ["standard"]}

gpiozero = "2.0.1"
pigpio = "1.78"
"RPi.GPIO" = {version = "0.7.1", markers= "sys_platform == 'linux'"}

[tool.poetry.group.dev.dependencies]
coverage = "7.8.2"
pre-commit = "4.2.0"
pytest = "8.4.0"
pytest-asyncio = "0.26.0"
pytest-cov = "6.1.1"
httpx = "0.28.1"
ruff = "0.11.13"

[tool.poetry.scripts]
irrigation-pi = 'irrigation_pi:cli'

[tool.ruff]
exclude = [".venv", "backend/migrations", "frontend"]

[tool.ruff.lint]
select = [
    "F", # Pyflakes
    "E", # pycodestyle
    "W", # pycodestyle
    "I", # isort
    "D",   # pydocstyle
    "UP",  # pyupgrade
    "ASYNC", # flake8-async
    "RUF",  # Ruff-specific rules
]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

# https://docs.pytest.org/en/latest/reference/customize.html
[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = [
    "irrigation_pi/tests",
    "backend/tests"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
